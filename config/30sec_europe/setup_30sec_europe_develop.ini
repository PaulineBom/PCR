[globalOptions]

# Set the pcrglobwb output directory in an absolute path.
outputDir    = /scratch/depfg/sutan101/pcrglobwb_output_europe/europe_30sec/version_2021-03-XX/develop/
#~ outputDir = /scratch/depfg/sutan101/pcrglobwb_output_europe/europe_30sec/version_2021-03-XX/first_test_danube_etc/

# Set the input directory map in an absolute path. 
# - The input forcing and parameter directories and files will be relative to this.
inputDir     = /scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/


#~ # test on the Rhine Meuse
#~ (pcrglobwb_python3) sutan101@gpu038.cluster:/scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/europe_30sec/cloneMaps/version_2021-03-15$ ls -lah */*13*
#~ -rw-r--r-- 1 sutan101 depfg 3.3M Mar 15 13:28 clone/clonemap_mask_13.map
#~ -rw-r--r-- 1 sutan101 depfg 3.3M Mar 15 13:28 mask/mask_13.map

# Map of clone (must be provided in PCRaster maps)
# - Spatial resolution and coverage are based on this map:
#~ cloneMap = europe_30sec/cloneMaps/version_2021-03-15/clone/clonemap_mask_13.map
cloneMap    = europe_30sec/cloneMaps/version_2021-03-15/clone/clonemap_mask_3.map
 
 
# The area/landmask of interest:
# If None, area/landmask is limited for cells with ldd value. 
#~ landmask = None
landmask    = europe_30sec/cloneMaps/version_2021-03-15/mask/mask_3.map

# TODO/FIXME: We set the landmask = None, as the current landmask excludes some parts of lakes located in the border. Note that while making new landmask, please also consider the extent of your forcing (in order to get rid off missing values of forcing that can lead to always-zero temperature cells, and therefore unrealistic snow).


# netcdf attributes for output files:
institution = Department of Physical Geography, Utrecht University
title       = PCR-GLOBWB 2 output (not coupled to MODFLOW), with human factors (non-natural)
description = by Edwin H. Sutanudjaja (contact: e.h.sutanudjaja@uu.nl), PCR-GLOBWB run with human factors (non-natural) at 30 arcsec resolution


startTime = 1981-01-01
endTime   = 2019-12-31
# Format: YYYY-MM-DD ; The model runs on daily time step.


# spinning up options:
maxSpinUpsInYears = 2
minConvForSoilSto = 0.0
minConvForGwatSto = 0.0
minConvForChanSto = 0.0
minConvForTotlSto = 0.0

# option/directory for saving the spin-up directory 
spinUpOutputDir = True


[meteoOptions]

#~ # Set the forcing temperature and precipitation files (relative to inputDir)
#~ precipitationNC = global_30min/meteo/forcing/daily_precipitation_cru_era-interim_1979_to_2010.nc
#~ temperatureNC   = global_30min/meteo/forcing/daily_temperature_cru_era-interim_1979_to_2010.nc
#~ 
#~ # Method to calculate referencePotETP (reference potential evaporation+transpiration)
#~ # options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
#~ referenceETPotMethod = Input
#~ refETPotFileNC = global_30min/meteo/forcing/daily_referencePotET_cru_era-interim_1979_to_2010.nc

#~ # Set the forcing temperature and precipitation files (relative to inputDir)
#~ precipitationNC = https://opendap.4tu.nl/thredds/dodsC/data2/pcrglobwb/version_2019_11_beta/pcrglobwb2_input/global_30min/meteo/forcing/daily_precipitation_cru_era-interim_1979_to_2010.nc                 
#~ temperatureNC   = https://opendap.4tu.nl/thredds/dodsC/data2/pcrglobwb/version_2019_11_beta/pcrglobwb2_input/global_30min/meteo/forcing/daily_temperature_cru_era-interim_1979_to_2010.nc
#~ 
#~ # Method to calculate referencePotETP (reference potential evaporation+transpiration)
#~ # options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
#~ referenceETPotMethod = Input
#~ refETPotFileNC = https://opendap.4tu.nl/thredds/dodsC/data2/pcrglobwb/version_2019_11_beta/pcrglobwb2_input/global_30min/meteo/forcing/daily_referencePotET_cru_era-interim_1979_to_2010.nc



#~ (pcrglobwb_python3) sutan101@gpu038.cluster:/scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin$ ls -lah */*daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:03 europe_era5-land_daily_d2m-average_1981-2019/europe_era5-land_daily_d2m-average_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:03 europe_era5-land_daily_d2m-maximum_1981-2019/europe_era5-land_daily_d2m-maximum_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:02 europe_era5-land_daily_d2m-minimum_1981-2019/europe_era5-land_daily_d2m-minimum_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:04 europe_era5-land_daily_fal-average_1981-2019/europe_era5-land_daily_fal-average_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:02 europe_era5-land_daily_spressu-avg_1981-2019/europe_era5-land_daily_spressu-avg_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:03 europe_era5-land_daily_t2m-average_1981-2019/europe_era5-land_daily_t2m-average_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:02 europe_era5-land_daily_t2m-maximum_1981-2019/europe_era5-land_daily_t2m-maximum_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:03 europe_era5-land_daily_t2m-minimum_1981-2019/europe_era5-land_daily_t2m-minimum_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:03 europe_era5-land_daily_total-preci_1981-2019/europe_era5-land_daily_total-preci_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:03 europe_era5-land_daily_total-ssrad_1981-2019/europe_era5-land_daily_total-ssrad_1981-2019_rempacon-5-arcmin_daily.nc
#~ -rw-r--r-- 1 sutan101 depfg 33G Mar  4 16:04 europe_era5-land_daily_wind10m-avg_1981-2019/europe_era5-land_daily_wind10m-avg_1981-2019_rempacon-5-arcmin_daily.nc



# Set the forcing precipitation file (may be defined relative to inputDir)
precipitationNC = /scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin/europe_era5-land_daily_total-preci_1981-2019/europe_era5-land_daily_total-preci_1981-2019_rempacon-5-arcmin_daily.nc

# variable name in the forcing file
precipitationVariableName = tp


# temperature
temperatureNC = /scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin/europe_era5-land_daily_t2m-average_1981-2019/europe_era5-land_daily_t2m-average_1981-2019_rempacon-5-arcmin_daily.nc
temperatureVariableName = t2m


# Method to calculate referencePotETP (reference potential evaporation+transpiration)
# options are "Hamon" and "Input" ; If "Input", the netcdf input file must be given:
referenceETPotMethod = Penman-Monteith
refETPotFileNC       = None

#~ referenceEPotVariableName = potentialEvaporation


# conversion constants and factors to correct forcing values (optional) so that the units are in m.day-1 and degree Celcius                                                                                                           
temperatureConstant      = -273.15
temperatureFactor        = 1.0
#~ referenceEPotConstant = 0.0
#~ referenceEPotFactor   = 1.0


# extra meteo variables for calculating reference potential evaporation based on Penman-Monteith (optional)
#
# - 10 m wind speed, unit: m.s-1
wind_speed_10m              = /scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin/europe_era5-land_daily_wind10m-avg_1981-2019/europe_era5-land_daily_wind10m-avg_1981-2019_rempacon-5-arcmin_daily.nc
#~ # - if wind_speed_10m is None, it will be estimated from u and v components
#~ wind_speed_10m_u_comp    = None
#~ wind_speed_10m_v_comp    = None
#
# - atmospheric pressure, unit: Pascal
atmospheric_pressure        = /scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin/europe_era5-land_daily_spressu-avg_1981-2019/europe_era5-land_daily_spressu-avg_1981-2019_rempacon-5-arcmin_daily.nc
#
# - extraterestrial radiation, unit: J.m-2.day-1
extraterestrial_radiation   = None
# - if extraterestrial_radiation is None, it will be calculated based on day length, latitude, day angle and day length

# - actual shortwave (solar) radiation, unit: J.m-2.day-1
shortwave_radiation         = None
# - if shortwave_radiation = None, actual shortwave (solar) radiation can be estimated from net radiation and albedo: ssrd = ssr / (1 - albedo) 
surface_net_solar_radiation = /scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin/europe_era5-land_daily_total-ssrad_1981-2019/europe_era5-land_daily_total-ssrad_1981-2019_rempacon-5-arcmin_daily.nc
albedo                      = /scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin/europe_era5-land_daily_fal-average_1981-2019/europe_era5-land_daily_fal-average_1981-2019_rempacon-5-arcmin_daily.nc
#
# - 2 m dew point temperature (average), unit: degree Celcius  
dewpoint_temperature_avg    = /scratch/depfg/sutan101/data/meteo_europe_era5land/daily_after_remapcon/merged_1981-2019_after_remapcon/5_arcmin/europe_era5-land_daily_d2m-average_1981-2019/europe_era5-land_daily_d2m-average_1981-2019_rempacon-5-arcmin_daily.nc
#

# conversion constants and factors to correct forcing values (optional) so that the units are in m.day-1 (precipitation), degree Celcius (temperature), Pascal (pressure), m.s-1, and J.m-2.day-1 (radiation)
consta_for_dewpoint_temperature_avg = -273.15                                                                                                      
factor_for_dewpoint_temperature_avg = 1.0 


# cell area (unit: m2)
cellAreaMap    = global_30sec/routing/cell_area/cdo_grid_area_30sec_map_correct_lat.nc


#~ # option to call the meteo/forcing method only
#~ callMeteoOnly = True
#~ # - TODO: Please check whether this is correct.

# initial conditions:
avgAnnualPrecipitationIni    = 0.0
avgAnnualTemperatureIni      = 0.0
avgAnnualDiurnalDeltaTempIni = 0.0


# - for debugging
outDailyTotNC = precipitation_before_downscaling,temperature_before_downscaling,referencePotET_before_downscaling,cellArea,avgAnnualPrecipitation        
outMonthTotNC = None 
outMonthAvgNC = precipitation_before_downscaling,temperature_before_downscaling,referencePotET_before_downscaling,temperature,precipitation,referencePotET,avgAnnualPrecipitation
outMonthEndNC = None
outAnnuaTotNC = None
outAnnuaAvgNC = None
outAnnuaEndNC = None


[meteoDownscalingOptions]
                                                                                                                                        
#~ downscalePrecipitation  = False                                                                                                                                   
#~ downscaleTemperature    = True                                                                                                                                  
#~ downscaleReferenceETPot = False                                                                                                                                   
   
downscalePrecipitation     = True                                                                                                                                   
downscaleTemperature       = True                                                                                                                                  
downscaleReferenceETPot    = True                                                                                                                                   

# downscaling (based on the digital elevation model):                                                                                                            
highResolutionDEM    = global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/dem_average_topography_parameters_30sec_february_2021_global_covered_with_zero.nc

# The downscaling will be performed by providing the "cellIds" (meteoDownscaleIds) of lower resolution cells.                                                    
meteoDownscaleIds    = global_30sec/meteo/unique_ids/unique_ids_5_arcmin_correct_lats.nc
#~ # - for arise/africa (using 150 arcsec forcing)
#~ meteoDownscaleIds = global_30sec/meteo/unique_ids/unique_ids_150_arcsec_correct_lats.nc

#~ (pcrglobwb_python3) sutan101@gpu038.cluster:/scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30sec/meteo/unique_ids$ ls -lah *
#~ -rw-r--r-- 1 sutan101 depfg  528 Feb 26 11:26 notes.txt
#~ -rw-r--r-- 1 sutan101 depfg 143M Feb 26 11:12 unique_ids_150_arcsec_correct_lats.nc
#~ -rw-r--r-- 1 sutan101 depfg 143M Feb 26 11:05 unique_ids_150_arcsec.map
#~ -rw-r--r-- 1 sutan101 depfg  36M Mar 17 15:15 unique_ids_5_arcmin_correct_lats.nc
#~ -rw-r--r-- 1 sutan101 depfg  36M Mar 17 15:14 unique_ids_5_arcmin.map

# lapse rates:                                                                                                                                                   
temperLapseRateNC    = global_05min_from_gmd_paper_input/meteo/downscaling_from_30min/temperature_slope.nc                                                                     
precipLapseRateNC    = global_05min_from_gmd_paper_input/meteo/downscaling_from_30min/precipitation_slope.nc                                                                   
                                                                                                                                                                 
# downscaling criteria (TODO: remove these):                                                                                                                     
temperatCorrelNC     = global_05min_from_gmd_paper_input/meteo/downscaling_from_30min/temperature_correl.nc                                                                     
precipitCorrelNC     = global_05min_from_gmd_paper_input/meteo/downscaling_from_30min/precipitation_correl.nc                                                                   
	                                                                                                                                                                 
# windows length (unit: arc-degree) for smoothing/averaging forcing data (not recommended):                                                                      
smoothingWindowsLength = 0


[landSurfaceOptions]

debugWaterBalance = True

numberOfUpperSoilLayers = 2

# topography parameters
# - they are used for all land cover types, unless they are are defined in certain land cover type options 
#   (e.g. different/various soil types for agriculture areas)  
topographyNC = global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/topography_parameters_30sec_february_2021_global_covered_with_zero.nc

soilPropertiesNC = None
# - if soilPropertiesNC = None, the following soil parameters will be used
firstStorDepth       = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/layerDepth_average_1_europe_30sec.nc
secondStorDepth      = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/layerDepth_average_2_europe_30sec.nc
soilWaterStorageCap1 = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/WHC_average_1_europe_30sec.nc
soilWaterStorageCap2 = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/WHC_average_2_europe_30sec.nc
airEntryValue1       = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/psiAir_average_1_europe_30sec.nc
airEntryValue2       = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/psiAir_average_2_europe_30sec.nc
poreSizeBeta1        = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/BCH_average_1_europe_30sec.nc
poreSizeBeta2        = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/BCH_average_2_europe_30sec.nc
resVolWC1            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcRes_average_1_europe_30sec.nc
resVolWC2            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcRes_average_2_europe_30sec.nc
satVolWC1            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcSat_average_1_europe_30sec.nc
satVolWC2            = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/vmcSat_average_2_europe_30sec.nc
KSat1                = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/kSat_average_1_europe_30sec.nc
KSat2                = europe_30sec/landSurface/soil/soilgrids/version_2021-02-XX/kSat_average_2_europe_30sec.nc

percolationImp       = global_30sec/landSurface/soil/impeded_drainage/global_30sec_impeded_drainage_permafrost_dsmw_correct_lats.nc


includeIrrigation = True

#~ # netcdf time series for historical expansion of irrigation areas (unit: hectares). 
#~ # Note: The resolution of this map must be consisten with the resolution of cellArea. 
#~ historicalIrrigationArea = global_05min/waterUse/irrigation/irrigated_areas/irrigationArea05ArcMin.nc
#~ # TODO: Update this using fraction from Louise


# land cover classes
landCoverTypes = naturalVegetationAndRainFedCrops,irrPaddy,irrNonPaddy

# we have to correct land cover fractions
noLandCoverFractionCorrection = False


# a pcraster map/value defining irrigation efficiency (dimensionless) - optional
irrigationEfficiency = global_30min_from_gmd_paper_input/waterUse/irrigation/irrigation_efficiency/efficiency.nc


includeDomesticWaterDemand  = True
includeIndustryWaterDemand  = True
includeLivestockWaterDemand = True


# domestic, industrial and livestock water demand data (unit must be in m.day-1)
domesticWaterDemandFile  = global_05min_from_gmd_paper_input/waterUse/waterDemand/domestic/domestic_water_demand_version_april_2015.nc
industryWaterDemandFile  = global_05min_from_gmd_paper_input/waterUse/waterDemand/industry/industry_water_demand_version_april_2015.nc
livestockWaterDemandFile = global_05min_from_gmd_paper_input/waterUse/waterDemand/livestock/livestock_water_demand_version_april_2015.nc


# desalination water supply (maximum/potential/capacity)
desalinationWater = global_05min_from_gmd_paper_input/waterUse/desalination/desalination_water_version_april_2015.nc


# zone IDs (scale) at which allocations of groundwater and surface water (as well as desalinated water) are performed  
allocationSegmentsForGroundSurfaceWater    = global_05min_from_gmd_paper_input/waterUse/abstraction_zones/abstraction_zones_60min_05min.nc

# pcraster maps defining the partitioning of groundwater - surface water source 
#
# - predefined surface water - groundwater partitioning for irrigation demand (e.g. based on Siebert, Global Map of Irrigation Areas version 5)
irrigationSurfaceWaterAbstractionFractionData           = global_05min_from_gmd_paper_input/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_SWFRAC.nc
# -- quality map
irrigationSurfaceWaterAbstractionFractionDataQuality    = global_05min_from_gmd_paper_input/waterUse/source_partitioning/surface_water_fraction_for_irrigation/AEI_QUAL.nc
#
# - threshold values defining the preference for surface water source for irrigation purpose
# -- treshold to maximize surface water irrigation use (cells with irrSurfaceWaterAbstractionFraction above this will prioritize irrigation surface water use)
treshold_to_maximize_irrigation_surface_water           = 0.50
# -- treshold to minimize fossil water withdrawal for irrigation (cells with irrSurfaceWaterAbstractionFraction below this have no fossil withdrawal for irrigation)
treshold_to_minimize_fossil_groundwater_irrigation      = 0.70
#
# - predefined surface water - groundwater partitioning for non irrigation demand (e.g. based on McDonald, 2014)
maximumNonIrrigationSurfaceWaterAbstractionFractionData = global_30min_from_gmd_paper_input/waterUse/source_partitioning/surface_water_fraction_for_non_irrigation/max_city_sw_fraction.nc


# option to skip extrapolation
noParameterExtrapolation = True


[naturalVegetationAndRainFedCropsOptions]

name = naturalVegetationAndRainFedCrops
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05

# other paramater values
minTopWaterLayer  = 0.0
minCropKC         = 0.2


#~ (pcrglobwb_python3) sutan101@gpu038.cluster:/scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX$ ls -lah *.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 composite-short-n-tall_cover_fraction.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 composite-short-n-tall_crop_coefficient.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 composite-short-n-tall_intercept_capacity.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 composite-short-n-tall_leaf_area_index.nc
#~ -rw-r--r-- 1 sutan101 depfg 117M Mar 16 12:21 maxrootdepth_all.nc
#~ -rw-r--r-- 1 sutan101 depfg 117M Mar 16 12:21 meanrootdepth_all.nc
#~ -rw-r--r-- 1 sutan101 depfg 117M Mar 16 12:21 minrootdepth_all.nc
#~ -rw-r--r-- 1 sutan101 depfg 117M Mar 16 12:21 rfrac1_all.nc
#~ -rw-r--r-- 1 sutan101 depfg 117M Mar 16 12:21 rfrac2_all.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 short_cover_fraction.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 short_crop_coefficient.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 short_intercept_capacity.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 short_leaf_area_index.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 tall_cover_fraction.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 tall_crop_coefficient.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 tall_intercept_capacity.nc
#~ -rw-r--r-- 1 sutan101 depfg  42G Feb  8 13:50 tall_leaf_area_index.nc


cropCoefficientNC = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/composite-short-n-tall_crop_coefficient.nc
interceptCapNC    = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/composite-short-n-tall_intercept_capacity.nc
coverFractionNC   = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/composite-short-n-tall_cover_fraction.nc

landCoverMapsNC   = None
# If NC file is not provided, we have to provide the following pcraster maps:
fracVegCover      = 1.0
minSoilDepthFrac  = 0.99
maxSoilDepthFrac  = 1.01
rootFraction1     = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/rfrac1_all.nc
rootFraction2     = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/rfrac2_all.nc	
maxRootDepth      = europe_30sec/landSurface/landCover/naturalVegetationAndRainFedCrops/version_2020-12-XX/meanrootdepth_all.nc
# Note: The maxRootDepth is not used for non irrigated land cover types. 	
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[irrPaddyOptions]

name = irrPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
#
fracVegCover     = global_30sec/landSurface/landCover/irrigated_fractions/global_estimate_irrigation_paddy_fraction_30sec.nc
minSoilDepthFrac = 0.99
maxSoilDepthFrac = 1.01
rootFraction1    = global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/rfrac1_paddy.nc
rootFraction2    = global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/rfrac2_paddy.nc
maxRootDepth     = 0.5
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.05
minCropKC        = 0.2
cropDeplFactor   = 0.2
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min_from_gmd_paper_input/landSurface/landCover/irrPaddy/Global_CropCoefficientKc-IrrPaddy_30min.nc


# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[irrNonPaddyOptions]

name = irrNonPaddy
debugWaterBalance = True

# snow module properties
snowModuleType      =  Simple
freezingT           =  0.0
degreeDayFactor     =  0.0055
snowWaterHoldingCap =  0.1
refreezingCoeff     =  0.05
#
landCoverMapsNC  = None
# If NC file is not provided, we have to provide the following values:
fracVegCover     = global_30sec/landSurface/landCover/irrigated_fractions/global_estimate_irrigation_non_paddy_fraction_30sec.nc
minSoilDepthFrac = 0.99
maxSoilDepthFrac = 1.01
rootFraction1    = global_30min_from_gmd_paper_input/landSurface/landCover/irrNonPaddy/rfrac1_nonpaddy.nc
rootFraction2    = global_30min_from_gmd_paper_input/landSurface/landCover/irrNonPaddy/rfrac2_nonpaddy.nc
maxRootDepth     = 1.0
#
# Parameters for the Arno's scheme:
arnoBeta = None
# If arnoBeta is defined, the soil water capacity distribution is based on this.
# If arnoBeta is NOT defined, maxSoilDepthFrac must be defined such that arnoBeta will be calculated based on maxSoilDepthFrac and minSoilDepthFrac.
#
# other paramater values
minTopWaterLayer = 0.0
minCropKC        = 0.2
cropDeplFactor   = 0.5
minInterceptCap  = 0.0002

cropCoefficientNC = global_30min_from_gmd_paper_input/landSurface/landCover/irrNonPaddy/Global_CropCoefficientKc-IrrNonPaddy_30min.nc

# initial conditions:
interceptStorIni = 0.0
snowCoverSWEIni  = 0.0
snowFreeWaterIni = 0.0
topWaterLayerIni = 0.0
storUppIni       = 0.0
storLowIni       = 0.0
interflowIni     = 0.0

noParameterExtrapolation = True


[groundwaterOptions]

debugWaterBalance = True

#~ groundwaterPropertiesNC = global_05min/groundwater/properties/groundwaterProperties5ArcMin.nc
groundwaterPropertiesNC    = None
#
recessionCoeff = global_30sec/groundwater/properties/version_202102XX/recession_coefficient_30sec.nc
kSatAquifer    = global_30sec/groundwater/properties/version_202102XX/k_conductivity_aquifer_filled_30sec.nc
specificYield  = global_30sec/groundwater/properties/version_202102XX/specific_yield_aquifer_filled_30sec.nc
#
# minimum value for groundwater recession coefficient (day-1) 
# - about 11 years
minRecessionCoeff = 0.00025
#~ # - about 27 years
#~ minRecessionCoeff = 1.0e-4


# some options for constraining groundwater abstraction
limitFossilGroundWaterAbstraction      = True
estimateOfRenewableGroundwaterCapacity = 0.0
estimateOfTotalGroundwaterThickness    = global_30sec/groundwater/aquifer_thickness_estimate/version_2020-09-XX/thickness_05min_remapbil_to_30sec_filled_with_pcr_correct_lat.nc
# minimum and maximum total groundwater thickness 
minimumTotalGroundwaterThickness       = 100.
maximumTotalGroundwaterThickness       = None


doNotExtrapolateThickness = True
noParameterExtrapolation  = True

# annual pumping capacity for each region (unit: billion cubic meter per year), should be given in a netcdf file
pumpingCapacityNC    = global_30min_from_gmd_paper_input/waterUse/groundwater_pumping_capacity/regional_abstraction_limit.nc

# zonal IDs (scale) at which zonal allocation of groundwater is performed  
allocationSegmentsForGroundwater    = global_05min_from_gmd_paper_input/waterUse/abstraction_zones/abstraction_zones_30min_05min.nc
#~ allocationSegmentsForGroundwater = False


# initial conditions:
storGroundwaterIni                           = 0.0
storGroundwaterFossilIni                     = Maximum
avgNonFossilGroundwaterAllocationLongIni     = 0.0
avgNonFossilGroundwaterAllocationShortIni    = 0.0
avgTotalGroundwaterAbstractionIni            = 0.0
avgTotalGroundwaterAllocationLongIni         = 0.0
avgTotalGroundwaterAllocationShortIni        = 0.0
relativeGroundwaterHeadIni                   = 0.0
baseflowIni                                  = 0.0


[routingOptions]

debugWaterBalance = True

# drainage direction map
lddMap      = global_30sec/routing/surface_water_bodies/version_2020-05-XX/lddsound_30sec_version_202005XX_correct_lat.nc

# cell area (unit: m2)
cellAreaMap = global_30sec/routing/cell_area/cdo_grid_area_30sec_map_correct_lat.nc

# routing method:
routingMethod = accuTravelTime

# manning coefficient
manningsN   = 0.04

# Option for flood plain simulation
dynamicFloodPlain = True

# manning coefficient for floodplain
floodplainManningsN = 0.07


# channel gradient
gradient             = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/channel_gradient_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# constant channel depth 
constantChannelDepth = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_depth_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# constant channel width (optional)
constantChannelWidth = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_width_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# minimum channel width (optional)
minimumChannelWidth  = global_30sec/routing/channel_properties/version_2021-02-XX/maps_covered_with_zero/bankfull_width_channel_parameters_30sec_february_2021_global_covered_with_zero.nc

# channel properties for flooding
bankfullCapacity     = None
# - If None, it will be estimated from (bankfull) channel depth (m) and width (m) 

# files for relative elevation (above minimum dem) 
relativeElevationFiles  = global_30sec/landSurface/topography/merit_dem_processed/version_2021-02-XX/maps_covered_with_zero/dzRel%04d_topography_parameters_30sec_february_2021_global_covered_with_zero.nc
relativeElevationLevels = 0.0, 0.01, 0.05, 0.10, 0.20, 0.30, 0.40, 0.50, 0.60, 0.70, 0.80, 0.90, 1.00


# composite crop factors for WaterBodies: 
cropCoefficientWaterNC = global_30min_from_gmd_paper_input/routing/kc_surface_water/cropCoefficientForOpenWater.nc
minCropWaterKC         = 1.00


# lake and reservoir parameters
includeWaterBodies        = True
waterBodyInputNC          = global_30sec/routing/surface_water_bodies/version_2020-05-XX/lakes_and_reservoirs_30sec_global_2019_version_202005XX.nc
#~ fracWaterInp           = None
#~ waterBodyIds           = None
#~ waterBodyTyp           = None
#~ resMaxCapInp           = None
#~ resSfAreaInp           = None
onlyNaturalWaterBodies    = False

#~ (pcrglobwb_python3) sutan101@gpu038.cluster:/scratch/depfg/sutan101/data/pcrglobwb_input_arise/develop/global_30sec/routing/surface_water_bodies/version_2020-05-XX$ ls -lah *.nc
#~ -r--r--r-- 1 sutan101 depfg 209G Jan 28 19:05 lakes_and_reservoirs_30sec_global_2010_to_2019_version_202005XX.nc
#~ -r--r--r-- 1 sutan101 depfg  21G Jan 28 19:09 lakes_and_reservoirs_30sec_global_2019_version_202005XX.nc
#~ -r--r--r-- 1 sutan101 depfg 1.8G Jan 28 19:10 lddsound_30sec_version_202005XX_correct_lat.nc
#~ -r--r--r-- 1 sutan101 depfg 891M Jan 28 19:10 lddsound_30sec_version_202005XX.nc

# initial conditions:
waterBodyStorageIni            = 0.0
channelStorageIni              = 0.0
readAvlChannelStorageIni       = 0.0
avgDischargeLongIni            = 0.0
avgDischargeShortIni           = 0.0
m2tDischargeLongIni            = 0.0
avgBaseflowLongIni             = 0.0
riverbedExchangeIni            = 0.0
subDischargeIni                = 0.0
avgLakeReservoirInflowShortIni = 0.0
avgLakeReservoirOutflowLongIni = 0.0
timestepsToAvgDischargeIni     = 0.0

[reportingOptions]

# output files that will be written in the disk in netcdf files:
# - daily resolution
outDailyTotNC = discharge,totalRunoff,gwRecharge,totalGroundwaterAbstraction,surfaceWaterStorage,temperature,precipitation,referencePotET,satDegUpp,satDegLow,satDegTotal,totalEvaporation,gwRecharge
# - monthly resolution
outMonthTotNC = actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,runoff,totalRunoff,baseflow,directRunoff,interflowTotal,totalGroundwaterAbstraction,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,precipitation,gwRecharge,surfaceWaterInf,referencePotET,totalEvaporation,totalPotentialEvaporation,totLandSurfaceActuaET,totalLandSurfacePotET,waterBodyActEvaporation,waterBodyPotEvaporation
outMonthAvgNC = discharge,temperature,dynamicFracWat,surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalActiveStorageThickness,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage
outMonthEndNC = storGroundwater,storGroundwaterFossil,waterBodyStorage,channelStorage,totalWaterStorageThickness,totalActiveStorageThickness
# - annual resolution
outAnnuaTotNC = totalEvaporation,precipitation,gwRecharge,totalRunoff,baseflow,desalinationAbstraction,surfaceWaterAbstraction,nonFossilGroundwaterAbstraction,fossilGroundwaterAbstraction,totalGroundwaterAbstraction,totalAbstraction,irrGrossDemand,nonIrrGrossDemand,totalGrossDemand,nonIrrWaterConsumption,nonIrrReturnFlow,runoff,actualET,irrPaddyWaterWithdrawal,irrNonPaddyWaterWithdrawal,irrigationWaterWithdrawal,domesticWaterWithdrawal,industryWaterWithdrawal,livestockWaterWithdrawal,precipitation_at_irrigation,netLqWaterToSoil_at_irrigation,evaporation_from_irrigation,transpiration_from_irrigation,referencePotET
outAnnuaAvgNC = temperature,discharge,surfaceWaterStorage,waterBodyStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness,satDegUpp,satDegLow,channelStorage,waterBodyStorage,fractionWaterBodyEvaporation,fractionTotalEvaporation,fracSurfaceWaterAllocation,fracDesalinatedWaterAllocation,gwRecharge
outAnnuaEndNC = surfaceWaterStorage,interceptStor,snowFreeWater,snowCoverSWE,topWaterLayer,storUppTotal,storLowTotal,storGroundwater,storGroundwaterFossil,totalWaterStorageThickness
# - monthly and annual maxima
outMonthMaxNC = channelStorage,dynamicFracWat,floodVolume,floodDepth,surfaceWaterLevel,discharge,totalRunoff
outAnnuaMaxNC = None

#~ # netcdf format and zlib setup
#~ formatNetCDF = NETCDF4
#~ zlib = True


